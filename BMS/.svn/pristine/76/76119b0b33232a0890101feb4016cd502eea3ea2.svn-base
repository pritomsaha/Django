from django.shortcuts import render, redirect, get_object_or_404
from django.forms.formsets import formset_factory
from django.db import IntegrityError, transaction
from .forms import ClientForm, ConcernPersonForm, BaseConcernPersonFormSet
from .models import Client, ConcernPerson
from django.contrib import messages
from BMS.utils import get_decoded_id

# Create your views here.

def client_index(request):
	clients = Client.objects.all()
	contex = {
		'clients': clients,
		'title': 'Client'
	}
	return render(request, 'client/index.html', contex)

def client_detail():
	pass

def client_save(request, id = None):
	client = Client.objects.get(pk = get_decoded_id(id)) if id else None
	client_form=ClientForm(request.POST or None, instance = client)
	initial = None
	if client:
		client_concern_persons = ConcernPerson.objects.filter(client = client).order_by('order')
		initial = [ {'order': cp.order, 'name': cp.name, 'designation': cp.designation, 'division': cp.division, 'status': cp.status} for cp in client_concern_persons ]

	concern_person_formset = formset_factory(ConcernPersonForm, formset = BaseConcernPersonFormSet, min_num = 1, extra = 0)(request.POST or None, initial = initial)
	if request.method == 'POST':
		if client_form.is_valid() and concern_person_formset.is_valid():
			client = client_form.save(commit = False)
			if id:
				client.updated_by = request.user.id
			else:
				client.created_by = request.user.id
			client.save()

			concern_persons = []
			for concern_person_form in concern_person_formset:
				concern_person = concern_person_form.save(commit = False)
				concern_person.client = client
				concern_persons.append(concern_person)
			try:
				with transaction.atomic():
					ConcernPerson.objects.filter(client = client).delete()
					ConcernPerson.objects.bulk_create(concern_persons)
					messages.success(request, "Client has been successfully "+ ("created" if id==None else "updated"))
					return redirect('Clients:client_index')
			except IntegrityError:
				messages.error(request, "Concern Person has not been successfully "+ ("created" if id==None else "updated"))
		else:
			messages.error(request, "Client Information has not been successfully "+ ("created" if id==None else "updated"))
		
	contex={
		"client_form":client_form,
		'concern_person_formset': concern_person_formset,
		'title': 'Update Client' if id else 'Add Client Information'
	}
	return render(request,"client/save.html",contex)

def client_delete():
	pass