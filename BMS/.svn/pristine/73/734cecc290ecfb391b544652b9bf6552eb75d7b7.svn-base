from django.shortcuts import render, redirect, get_object_or_404
from .models import Employee,Designation
from .forms import EmployeeCreationForm,DesignationCreationForm
from django.contrib import messages
from BMS.utils import get_decoded_id

# Create your views here.

def employee_index(request):
	employees = Employee.objects.all()
	contex = {
		'employees': employees,
		'title': 'Employee' 
	}
	return render(request, 'employee/index.html', contex)

def employee_detail():
	pass

def employee_save(request, id = None):
	instance = Employee.objects.get(pk = get_decoded_id(id)) if id else None
	form=EmployeeCreationForm(request.POST or None, instance = instance)
	if request.method == 'POST':
		if form.is_valid():
			instance=form.save(commit=False)
			if id:
				instance.updated_by = request.user.id
			else:
				instance.created_by = request.user.id
			instance.save()
			messages.success(request, "Employee has been successfully "+ ("updated" if id else "added") +"!")
			return redirect('Employees:employee_index')
	
	contex={
		"form":form,
		'title': 'Update Employee' if id else 'Add Employee'
	}
	return render(request,"employee/save.html",contex)

def employee_delete():
	pass

def designation_index(request):
	pass

def designation_save(request, id = None):
	pass

def designation_delete(request, id = None):
	pass

# def create_designation(request):
# 	form=DesignationCreationForm(request.POST or None)
# 	if form.is_valid():
# 		instance=form.save(commit=False)
# 		# print(form.cleaned_data.get("title"))
# 		instance.save()
# 		messages.success(request,'Successfully Created.')
# 		return redirect('list_designation')
# 	# else:
# 	# 	messages.error(request,"Not successfully creasted!")

	
# 	context={
# 	"form":form
# 	}
# 	#return HttpResponse("<h1>create</h1>")
# 	return render(request,"designation/create.html",context)

# def list_designation():
# 	designations = Designation.objects.all()
# 	context = {
# 		'designations':designations,
# 		'title':'Designation'
# 	}
# 	return render(request,'designation/create.html',context)

# def delete_designation():
# 	pass
