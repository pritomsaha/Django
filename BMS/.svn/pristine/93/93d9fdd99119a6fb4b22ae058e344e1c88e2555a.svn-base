from django.db import models
from datetime import datetime
from django.conf import settings
from django.db.models.signals import pre_save
from django.dispatch import receiver
from django.utils.translation import ugettext_lazy as _

#Create your models here.

class Manager(models.Manager):
	def active(self):
		return self.filter(status = True)

class Designation(models.Model):
	title = models.CharField(_('title'), max_length=40)
	status = models.BooleanField(_('status'))
	objects = Manager()

	def __str__(self):
		return self.title

	def get_encoded_id(self):
		return settings.HASHID.encode(self.id)

	class Meta:
		db_table = 'designations'

def upload_location(instance, filename):
	return '/'.join(['images', 'employees', instance.employee_id, filename])

class Employee(models.Model):
	name = models.CharField(_('name'), max_length=40)
	employee_id = models.CharField(_('employee id'), max_length = 20, unique = True)
	designation = models.ForeignKey(Designation, on_delete=models.CASCADE)
	father_name = models.CharField(_('father name'), max_length=40)
	mother_name = models.CharField(_('mother name'), max_length=40)
	present_address= models.CharField(_('present address'),max_length=100)
	permanent_address =models.CharField(_('permanent address'), max_length=100)
	gender = models.CharField(_('gender'), choices = (('M', 'Male'), ('F', 'Female'), ('O', 'Others')), max_length=6)
	date_of_birth = models.DateField(_('date of birth'), auto_now = False, auto_now_add = False)
	contact_number = models.CharField(_('contact number'), max_length=20)
	email = models.EmailField(_('email address'), unique = True)
	date_of_joining = models.DateField(_('date of joining'), auto_now=False,auto_now_add=False)
	starting_salary = models.FloatField(_('starting salary'), null = True)
	current_salary = models.FloatField(_('current salary'), null = True)
	national_id = models.CharField(_('national id'), max_length=20, null = True)
	profile_image = models.ImageField(_('profile picture'), upload_to = upload_location, null = True)
	status = models.BooleanField(_('status'))
	created_at = models.DateTimeField(default = datetime.now)
	updated_at = models.DateTimeField(auto_now = True)
	created_by = models.IntegerField()
	updated_by = models.IntegerField(null = True)
	objects = Manager()

	class Meta:
		db_table = 'employees'

	def __str__(self):
		return self.name+' ('+self.employee_id+')'

	def get_encoded_id(self):
		return settings.HASHID.encode(self.id)

	def get_gender(self):
		if self.gender == "M":
			return "Male"
		if self.gender == "F":
			return "Female"
		return "Others"

	def get_starting_salary(self):
		return self.starting_salary if self.starting_salary else "Not available"

	def get_current_salary(self):
		return self.current_salary if self.current_salary else "Not available"

	def get_national_id(self):
		return self.national_id if self.national_id else "Not available"

	def get_status(self):
		if self.status:
			return "Active"
		return "Not Active"

@receiver(pre_save, sender = Employee)
def profile_image_save(sender, instance, *args, **kwargs):
	if not instance.profile_image:
		if instance.gender == "F":
			instance.profile_image = 'images/employees/profile-default-female.jpg'
		else:
			instance.profile_image = 'images/employees/profile-default-male.png'